name: "inception_net_by_script"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 224
input_dim: 224

input: "label"
input_dim: 1 # to be changed on-the-fly to match num ROIs
input_dim: 1
input_dim: 1
input_dim: 1

layers {
	bottom: "data"
	top: "conv1_t"
	name: "conv1"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 7
		pad: 3
		stride: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
		 
	}
	blobs_lr: 1.0
	blobs_lr: 2.0
}

layers {
	bottom: "conv1_t"
	top: "conv1"
	name: "bn_conv1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "conv1"
	top: "conv1"
	name: "conv1_relu"
	type: RELU
}

layers {
	bottom: "conv1"
	top: "pool1"
	name: "pool1"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}

layers {
	bottom: "pool1"
	top: "conv2a_t"
	name: "conv2a"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.177
		}
		bias_filler {
			type: "constant"
			value: 0
		}
		 
	}
	blobs_lr: 1.0
	blobs_lr: 2.0
}

layers {
	bottom: "conv2a_t"
	top: "conv2a"
	name: "bn_conv2a"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "conv2a"
	top: "conv2a"
	name: "conv2a_relu"
	type: RELU
}

layers {
	bottom: "conv2a"
	top: "conv2b_t"
	name: "conv2b"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.034
		}
		bias_filler {
			type: "constant"
			value: 0
		}
		 
	}
	blobs_lr: 1.0
	blobs_lr: 2.0
}

layers {
	bottom: "conv2b_t"
	top: "conv2b"
	name: "bn_conv2b"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "conv2b"
	top: "conv2b"
	name: "conv2b_relu"
	type: RELU
}

layers {
	bottom: "conv2b"
	top: "pool2"
	name: "pool2"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}

layers {
	bottom: "pool2"
	top: "inception3a_1x1_t"
	name: "inception3a_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_1x1_t"
	top: "inception3a_1x1"
	name: "bn3a_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_1x1"
	top: "inception3a_1x1"
	name: "inception3a_1x1_relu"
	type: RELU
}

layers {
	bottom: "pool2"
	top: "inception3a_1x1_for_3x3red_t"
	name: "inception3a_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_1x1_for_3x3red_t"
	top: "inception3a_1x1_for_3x3red"
	name: "bn3a_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_1x1_for_3x3red"
	top: "inception3a_1x1_for_3x3red"
	name: "inception3a_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3a_1x1_for_3x3red"
	top: "inception3a_3x3_t"
	name: "inception3a_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_3x3_t"
	top: "inception3a_3x3"
	name: "bn3a_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_3x3"
	top: "inception3a_3x3"
	name: "inception3a_3x3_relu"
	type: RELU
}

layers {
	bottom: "pool2"
	top: "inception3a_1x1_for_duo3x3red_t"
	name: "inception3a_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_1x1_for_duo3x3red_t"
	top: "inception3a_1x1_for_duo3x3red"
	name: "bn3a_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_1x1_for_duo3x3red"
	top: "inception3a_1x1_for_duo3x3red"
	name: "inception3a_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3a_1x1_for_duo3x3red"
	top: "inception3a_duo3x3_1_t"
	name: "inception3a_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_duo3x3_1_t"
	top: "inception3a_duo3x3_1"
	name: "bn3a_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_duo3x3_1"
	top: "inception3a_duo3x3_1"
	name: "inception3a_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception3a_duo3x3_1"
	top: "inception3a_duo3x3_2_t"
	name: "inception3a_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_duo3x3_2_t"
	top: "inception3a_duo3x3_2"
	name: "bn3a_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_duo3x3_2"
	top: "inception3a_duo3x3_2"
	name: "inception3a_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "pool2"
	top: "inception3a_max_filter"
	name: "inception3a_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception3a_max_filter"
	top: "inception3a_1x1_after_max_t"
	name: "inception3a_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 32
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3a_1x1_after_max_t"
	top: "inception3a_1x1_after_max"
	name: "bn3a_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3a_1x1_after_max"
	top: "inception3a_1x1_after_max"
	name: "inception3a_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception3a_1x1"
	bottom: "inception3a_3x3"
	bottom: "inception3a_duo3x3_2"
	bottom: "inception3a_1x1_after_max"
	top: "inp3a"
	name: "inception3a"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp3a"
	top: "inception3b_1x1_t"
	name: "inception3b_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_1x1_t"
	top: "inception3b_1x1"
	name: "bn3b_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_1x1"
	top: "inception3b_1x1"
	name: "inception3b_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp3a"
	top: "inception3b_1x1_for_3x3red_t"
	name: "inception3b_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_1x1_for_3x3red_t"
	top: "inception3b_1x1_for_3x3red"
	name: "bn3b_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_1x1_for_3x3red"
	top: "inception3b_1x1_for_3x3red"
	name: "inception3b_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3b_1x1_for_3x3red"
	top: "inception3b_3x3_t"
	name: "inception3b_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_3x3_t"
	top: "inception3b_3x3"
	name: "bn3b_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_3x3"
	top: "inception3b_3x3"
	name: "inception3b_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp3a"
	top: "inception3b_1x1_for_duo3x3red_t"
	name: "inception3b_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_1x1_for_duo3x3red_t"
	top: "inception3b_1x1_for_duo3x3red"
	name: "bn3b_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_1x1_for_duo3x3red"
	top: "inception3b_1x1_for_duo3x3red"
	name: "inception3b_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3b_1x1_for_duo3x3red"
	top: "inception3b_duo3x3_1_t"
	name: "inception3b_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_duo3x3_1_t"
	top: "inception3b_duo3x3_1"
	name: "bn3b_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_duo3x3_1"
	top: "inception3b_duo3x3_1"
	name: "inception3b_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception3b_duo3x3_1"
	top: "inception3b_duo3x3_2_t"
	name: "inception3b_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_duo3x3_2_t"
	top: "inception3b_duo3x3_2"
	name: "bn3b_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_duo3x3_2"
	top: "inception3b_duo3x3_2"
	name: "inception3b_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp3a"
	top: "inception3b_max_filter"
	name: "inception3b_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception3b_max_filter"
	top: "inception3b_1x1_after_max_t"
	name: "inception3b_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3b_1x1_after_max_t"
	top: "inception3b_1x1_after_max"
	name: "bn3b_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3b_1x1_after_max"
	top: "inception3b_1x1_after_max"
	name: "inception3b_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception3b_1x1"
	bottom: "inception3b_3x3"
	bottom: "inception3b_duo3x3_2"
	bottom: "inception3b_1x1_after_max"
	top: "inp3b"
	name: "inception3b"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp3b"
	top: "inception3c_1x1_for_3x3red_t"
	name: "inception3c_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3c_1x1_for_3x3red_t"
	top: "inception3c_1x1_for_3x3red"
	name: "bn3c_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3c_1x1_for_3x3red"
	top: "inception3c_1x1_for_3x3red"
	name: "inception3c_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3c_1x1_for_3x3red"
	top: "inception3c_3x3_t"
	name: "inception3c_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 3
		pad: 1
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3c_3x3_t"
	top: "inception3c_3x3"
	name: "bn3c_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3c_3x3"
	top: "inception3c_3x3"
	name: "inception3c_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp3b"
	top: "inception3c_1x1_for_duo3x3red_t"
	name: "inception3c_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3c_1x1_for_duo3x3red_t"
	top: "inception3c_1x1_for_duo3x3red"
	name: "bn3c_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3c_1x1_for_duo3x3red"
	top: "inception3c_1x1_for_duo3x3red"
	name: "inception3c_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception3c_1x1_for_duo3x3red"
	top: "inception3c_duo3x3_1_t"
	name: "inception3c_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3c_duo3x3_1_t"
	top: "inception3c_duo3x3_1"
	name: "bn3c_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3c_duo3x3_1"
	top: "inception3c_duo3x3_1"
	name: "inception3c_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception3c_duo3x3_1"
	top: "inception3c_duo3x3_2_t"
	name: "inception3c_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception3c_duo3x3_2_t"
	top: "inception3c_duo3x3_2"
	name: "bn3c_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception3c_duo3x3_2"
	top: "inception3c_duo3x3_2"
	name: "inception3c_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp3b"
	top: "inception3c_max_filter"
	name: "inception3c_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 2
		stride: 2
		pool: MAX
	}
}

layers {
	bottom: "inception3c_3x3"
	bottom: "inception3c_duo3x3_2"
	bottom: "inception3c_max_filter"
	top: "inp3c"
	name: "inception3c"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp3c"
	top: "inception4a_1x1_t"
	name: "inception4a_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 224
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_1x1_t"
	top: "inception4a_1x1"
	name: "bn4a_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_1x1"
	top: "inception4a_1x1"
	name: "inception4a_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp3c"
	top: "inception4a_1x1_for_3x3red_t"
	name: "inception4a_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_1x1_for_3x3red_t"
	top: "inception4a_1x1_for_3x3red"
	name: "bn4a_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_1x1_for_3x3red"
	top: "inception4a_1x1_for_3x3red"
	name: "inception4a_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4a_1x1_for_3x3red"
	top: "inception4a_3x3_t"
	name: "inception4a_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_3x3_t"
	top: "inception4a_3x3"
	name: "bn4a_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_3x3"
	top: "inception4a_3x3"
	name: "inception4a_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp3c"
	top: "inception4a_1x1_for_duo3x3red_t"
	name: "inception4a_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_1x1_for_duo3x3red_t"
	top: "inception4a_1x1_for_duo3x3red"
	name: "bn4a_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_1x1_for_duo3x3red"
	top: "inception4a_1x1_for_duo3x3red"
	name: "inception4a_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4a_1x1_for_duo3x3red"
	top: "inception4a_duo3x3_1_t"
	name: "inception4a_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_duo3x3_1_t"
	top: "inception4a_duo3x3_1"
	name: "bn4a_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_duo3x3_1"
	top: "inception4a_duo3x3_1"
	name: "inception4a_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception4a_duo3x3_1"
	top: "inception4a_duo3x3_2_t"
	name: "inception4a_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_duo3x3_2_t"
	top: "inception4a_duo3x3_2"
	name: "bn4a_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_duo3x3_2"
	top: "inception4a_duo3x3_2"
	name: "inception4a_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp3c"
	top: "inception4a_max_filter"
	name: "inception4a_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception4a_max_filter"
	top: "inception4a_1x1_after_max_t"
	name: "inception4a_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4a_1x1_after_max_t"
	top: "inception4a_1x1_after_max"
	name: "bn4a_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4a_1x1_after_max"
	top: "inception4a_1x1_after_max"
	name: "inception4a_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception4a_1x1"
	bottom: "inception4a_3x3"
	bottom: "inception4a_duo3x3_2"
	bottom: "inception4a_1x1_after_max"
	top: "inp4a"
	name: "inception4a"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp4a"
	top: "inception4b_1x1_t"
	name: "inception4b_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_1x1_t"
	top: "inception4b_1x1"
	name: "bn4b_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_1x1"
	top: "inception4b_1x1"
	name: "inception4b_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp4a"
	top: "inception4b_1x1_for_3x3red_t"
	name: "inception4b_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_1x1_for_3x3red_t"
	top: "inception4b_1x1_for_3x3red"
	name: "bn4b_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_1x1_for_3x3red"
	top: "inception4b_1x1_for_3x3red"
	name: "inception4b_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4b_1x1_for_3x3red"
	top: "inception4b_3x3_t"
	name: "inception4b_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_3x3_t"
	top: "inception4b_3x3"
	name: "bn4b_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_3x3"
	top: "inception4b_3x3"
	name: "inception4b_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp4a"
	top: "inception4b_1x1_for_duo3x3red_t"
	name: "inception4b_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_1x1_for_duo3x3red_t"
	top: "inception4b_1x1_for_duo3x3red"
	name: "bn4b_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_1x1_for_duo3x3red"
	top: "inception4b_1x1_for_duo3x3red"
	name: "inception4b_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4b_1x1_for_duo3x3red"
	top: "inception4b_duo3x3_1_t"
	name: "inception4b_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_duo3x3_1_t"
	top: "inception4b_duo3x3_1"
	name: "bn4b_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_duo3x3_1"
	top: "inception4b_duo3x3_1"
	name: "inception4b_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception4b_duo3x3_1"
	top: "inception4b_duo3x3_2_t"
	name: "inception4b_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_duo3x3_2_t"
	top: "inception4b_duo3x3_2"
	name: "bn4b_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_duo3x3_2"
	top: "inception4b_duo3x3_2"
	name: "inception4b_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp4a"
	top: "inception4b_max_filter"
	name: "inception4b_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception4b_max_filter"
	top: "inception4b_1x1_after_max_t"
	name: "inception4b_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4b_1x1_after_max_t"
	top: "inception4b_1x1_after_max"
	name: "bn4b_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4b_1x1_after_max"
	top: "inception4b_1x1_after_max"
	name: "inception4b_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception4b_1x1"
	bottom: "inception4b_3x3"
	bottom: "inception4b_duo3x3_2"
	bottom: "inception4b_1x1_after_max"
	top: "inp4b"
	name: "inception4b"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp4b"
	top: "inception4c_1x1_t"
	name: "inception4c_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_1x1_t"
	top: "inception4c_1x1"
	name: "bn4c_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_1x1"
	top: "inception4c_1x1"
	name: "inception4c_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp4b"
	top: "inception4c_1x1_for_3x3red_t"
	name: "inception4c_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_1x1_for_3x3red_t"
	top: "inception4c_1x1_for_3x3red"
	name: "bn4c_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_1x1_for_3x3red"
	top: "inception4c_1x1_for_3x3red"
	name: "inception4c_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4c_1x1_for_3x3red"
	top: "inception4c_3x3_t"
	name: "inception4c_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_3x3_t"
	top: "inception4c_3x3"
	name: "bn4c_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_3x3"
	top: "inception4c_3x3"
	name: "inception4c_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp4b"
	top: "inception4c_1x1_for_duo3x3red_t"
	name: "inception4c_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_1x1_for_duo3x3red_t"
	top: "inception4c_1x1_for_duo3x3red"
	name: "bn4c_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_1x1_for_duo3x3red"
	top: "inception4c_1x1_for_duo3x3red"
	name: "inception4c_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4c_1x1_for_duo3x3red"
	top: "inception4c_duo3x3_1_t"
	name: "inception4c_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_duo3x3_1_t"
	top: "inception4c_duo3x3_1"
	name: "bn4c_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_duo3x3_1"
	top: "inception4c_duo3x3_1"
	name: "inception4c_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception4c_duo3x3_1"
	top: "inception4c_duo3x3_2_t"
	name: "inception4c_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_duo3x3_2_t"
	top: "inception4c_duo3x3_2"
	name: "bn4c_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_duo3x3_2"
	top: "inception4c_duo3x3_2"
	name: "inception4c_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp4b"
	top: "inception4c_max_filter"
	name: "inception4c_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception4c_max_filter"
	top: "inception4c_1x1_after_max_t"
	name: "inception4c_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4c_1x1_after_max_t"
	top: "inception4c_1x1_after_max"
	name: "bn4c_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4c_1x1_after_max"
	top: "inception4c_1x1_after_max"
	name: "inception4c_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception4c_1x1"
	bottom: "inception4c_3x3"
	bottom: "inception4c_duo3x3_2"
	bottom: "inception4c_1x1_after_max"
	top: "inp4c"
	name: "inception4c"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp4c"
	top: "inception4d_1x1_t"
	name: "inception4d_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 96
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_1x1_t"
	top: "inception4d_1x1"
	name: "bn4d_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_1x1"
	top: "inception4d_1x1"
	name: "inception4d_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp4c"
	top: "inception4d_1x1_for_3x3red_t"
	name: "inception4d_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_1x1_for_3x3red_t"
	top: "inception4d_1x1_for_3x3red"
	name: "bn4d_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_1x1_for_3x3red"
	top: "inception4d_1x1_for_3x3red"
	name: "inception4d_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4d_1x1_for_3x3red"
	top: "inception4d_3x3_t"
	name: "inception4d_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_3x3_t"
	top: "inception4d_3x3"
	name: "bn4d_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_3x3"
	top: "inception4d_3x3"
	name: "inception4d_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp4c"
	top: "inception4d_1x1_for_duo3x3red_t"
	name: "inception4d_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_1x1_for_duo3x3red_t"
	top: "inception4d_1x1_for_duo3x3red"
	name: "bn4d_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_1x1_for_duo3x3red"
	top: "inception4d_1x1_for_duo3x3red"
	name: "inception4d_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4d_1x1_for_duo3x3red"
	top: "inception4d_duo3x3_1_t"
	name: "inception4d_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_duo3x3_1_t"
	top: "inception4d_duo3x3_1"
	name: "bn4d_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_duo3x3_1"
	top: "inception4d_duo3x3_1"
	name: "inception4d_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception4d_duo3x3_1"
	top: "inception4d_duo3x3_2_t"
	name: "inception4d_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_duo3x3_2_t"
	top: "inception4d_duo3x3_2"
	name: "bn4d_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_duo3x3_2"
	top: "inception4d_duo3x3_2"
	name: "inception4d_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp4c"
	top: "inception4d_max_filter"
	name: "inception4d_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception4d_max_filter"
	top: "inception4d_1x1_after_max_t"
	name: "inception4d_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4d_1x1_after_max_t"
	top: "inception4d_1x1_after_max"
	name: "bn4d_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4d_1x1_after_max"
	top: "inception4d_1x1_after_max"
	name: "inception4d_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception4d_1x1"
	bottom: "inception4d_3x3"
	bottom: "inception4d_duo3x3_2"
	bottom: "inception4d_1x1_after_max"
	top: "inp4d"
	name: "inception4d"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp4d"
	top: "inception4e_1x1_for_3x3red_t"
	name: "inception4e_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4e_1x1_for_3x3red_t"
	top: "inception4e_1x1_for_3x3red"
	name: "bn4e_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4e_1x1_for_3x3red"
	top: "inception4e_1x1_for_3x3red"
	name: "inception4e_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4e_1x1_for_3x3red"
	top: "inception4e_3x3_t"
	name: "inception4e_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 3
		pad: 1
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4e_3x3_t"
	top: "inception4e_3x3"
	name: "bn4e_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4e_3x3"
	top: "inception4e_3x3"
	name: "inception4e_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp4d"
	top: "inception4e_1x1_for_duo3x3red_t"
	name: "inception4e_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4e_1x1_for_duo3x3red_t"
	top: "inception4e_1x1_for_duo3x3red"
	name: "bn4e_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4e_1x1_for_duo3x3red"
	top: "inception4e_1x1_for_duo3x3red"
	name: "inception4e_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception4e_1x1_for_duo3x3red"
	top: "inception4e_duo3x3_1_t"
	name: "inception4e_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4e_duo3x3_1_t"
	top: "inception4e_duo3x3_1"
	name: "bn4e_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4e_duo3x3_1"
	top: "inception4e_duo3x3_1"
	name: "inception4e_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception4e_duo3x3_1"
	top: "inception4e_duo3x3_2_t"
	name: "inception4e_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception4e_duo3x3_2_t"
	top: "inception4e_duo3x3_2"
	name: "bn4e_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception4e_duo3x3_2"
	top: "inception4e_duo3x3_2"
	name: "inception4e_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp4d"
	top: "inception4e_max_filter"
	name: "inception4e_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 2
		stride: 2
		pool: MAX
	}
}

layers {
	bottom: "inception4e_3x3"
	bottom: "inception4e_duo3x3_2"
	bottom: "inception4e_max_filter"
	top: "inp4e"
	name: "inception4e"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp4e"
	top: "inception5a_1x1_t"
	name: "inception5a_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 352
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_1x1_t"
	top: "inception5a_1x1"
	name: "bn5a_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_1x1"
	top: "inception5a_1x1"
	name: "inception5a_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp4e"
	top: "inception5a_1x1_for_3x3red_t"
	name: "inception5a_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_1x1_for_3x3red_t"
	top: "inception5a_1x1_for_3x3red"
	name: "bn5a_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_1x1_for_3x3red"
	top: "inception5a_1x1_for_3x3red"
	name: "inception5a_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception5a_1x1_for_3x3red"
	top: "inception5a_3x3_t"
	name: "inception5a_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 320
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_3x3_t"
	top: "inception5a_3x3"
	name: "bn5a_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_3x3"
	top: "inception5a_3x3"
	name: "inception5a_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp4e"
	top: "inception5a_1x1_for_duo3x3red_t"
	name: "inception5a_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 160
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_1x1_for_duo3x3red_t"
	top: "inception5a_1x1_for_duo3x3red"
	name: "bn5a_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_1x1_for_duo3x3red"
	top: "inception5a_1x1_for_duo3x3red"
	name: "inception5a_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception5a_1x1_for_duo3x3red"
	top: "inception5a_duo3x3_1_t"
	name: "inception5a_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 224
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_duo3x3_1_t"
	top: "inception5a_duo3x3_1"
	name: "bn5a_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_duo3x3_1"
	top: "inception5a_duo3x3_1"
	name: "inception5a_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception5a_duo3x3_1"
	top: "inception5a_duo3x3_2_t"
	name: "inception5a_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 224
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_duo3x3_2_t"
	top: "inception5a_duo3x3_2"
	name: "bn5a_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_duo3x3_2"
	top: "inception5a_duo3x3_2"
	name: "inception5a_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp4e"
	top: "inception5a_max_filter"
	name: "inception5a_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: AVE
		pad: 1
	}
}

layers {
	bottom: "inception5a_max_filter"
	top: "inception5a_1x1_after_max_t"
	name: "inception5a_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5a_1x1_after_max_t"
	top: "inception5a_1x1_after_max"
	name: "bn5a_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5a_1x1_after_max"
	top: "inception5a_1x1_after_max"
	name: "inception5a_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception5a_1x1"
	bottom: "inception5a_3x3"
	bottom: "inception5a_duo3x3_2"
	bottom: "inception5a_1x1_after_max"
	top: "inp5a"
	name: "inception5a"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp5a"
	top: "inception5b_1x1_t"
	name: "inception5b_1x1"
	type: CONVOLUTION
	convolution_param {
		num_output: 352
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_1x1_t"
	top: "inception5b_1x1"
	name: "bn5b_1x1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_1x1"
	top: "inception5b_1x1"
	name: "inception5b_1x1_relu"
	type: RELU
}

layers {
	bottom: "inp5a"
	top: "inception5b_1x1_for_3x3red_t"
	name: "inception5b_1x1_for_3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_1x1_for_3x3red_t"
	top: "inception5b_1x1_for_3x3red"
	name: "bn5b_1x1_for_3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_1x1_for_3x3red"
	top: "inception5b_1x1_for_3x3red"
	name: "inception5b_1x1_for_3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception5b_1x1_for_3x3red"
	top: "inception5b_3x3_t"
	name: "inception5b_3x3"
	type: CONVOLUTION
	convolution_param {
		num_output: 320
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_3x3_t"
	top: "inception5b_3x3"
	name: "bn5b_3x3"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_3x3"
	top: "inception5b_3x3"
	name: "inception5b_3x3_relu"
	type: RELU
}

layers {
	bottom: "inp5a"
	top: "inception5b_1x1_for_duo3x3red_t"
	name: "inception5b_1x1_for_duo3x3red"
	type: CONVOLUTION
	convolution_param {
		num_output: 192
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_1x1_for_duo3x3red_t"
	top: "inception5b_1x1_for_duo3x3red"
	name: "bn5b_1x1_for_duo3x3red"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_1x1_for_duo3x3red"
	top: "inception5b_1x1_for_duo3x3red"
	name: "inception5b_1x1_for_duo3x3red_relu"
	type: RELU
}

layers {
	bottom: "inception5b_1x1_for_duo3x3red"
	top: "inception5b_duo3x3_1_t"
	name: "inception5b_duo3x3_1"
	type: CONVOLUTION
	convolution_param {
		num_output: 224
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_duo3x3_1_t"
	top: "inception5b_duo3x3_1"
	name: "bn5b_duo3x3_1"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_duo3x3_1"
	top: "inception5b_duo3x3_1"
	name: "inception5b_duo3x3_1_relu"
	type: RELU
}

layers {
	bottom: "inception5b_duo3x3_1"
	top: "inception5b_duo3x3_2_t"
	name: "inception5b_duo3x3_2"
	type: CONVOLUTION
	convolution_param {
		num_output: 224
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_duo3x3_2_t"
	top: "inception5b_duo3x3_2"
	name: "bn5b_duo3x3_2"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_duo3x3_2"
	top: "inception5b_duo3x3_2"
	name: "inception5b_duo3x3_2_relu"
	type: RELU
}

layers {
	bottom: "inp5a"
	top: "inception5b_max_filter"
	name: "inception5b_max_filter"
	type: POOLING
	pooling_param {
		kernel_size: 3
		stride: 1
		pool: MAX
		pad: 1
	}
}

layers {
	bottom: "inception5b_max_filter"
	top: "inception5b_1x1_after_max_t"
	name: "inception5b_1x1_after_max"
	type: CONVOLUTION
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "xavier"
		}
		bias_term: false
		 
	}
	blobs_lr: 1.0
}

layers {
	bottom: "inception5b_1x1_after_max_t"
	top: "inception5b_1x1_after_max"
	name: "bn5b_1x1_after_max"
	type: BATCH_NORM
	batch_norm_param {
		scale_filler {
			type: "constant"
			value: 1
		}
		shift_filler {
			type: "constant"
			value: 0
		}
		record_option: USE_RECORD_NORM
	}
	blobs_lr: 1.0
	blobs_lr: 1.0
	blobs_lr: 0
	blobs_lr: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
	weight_decay: 0
}

layers {
	bottom: "inception5b_1x1_after_max"
	top: "inception5b_1x1_after_max"
	name: "inception5b_1x1_after_max_relu"
	type: RELU
}

layers {
	bottom: "inception5b_1x1"
	bottom: "inception5b_3x3"
	bottom: "inception5b_duo3x3_2"
	bottom: "inception5b_1x1_after_max"
	top: "inp5b"
	name: "inception5b"
	type: CONCAT
	concat_param {
		concat_dim: 1
	}
}

layers {
	bottom: "inp5b"
	top: "pool5"
	name: "pool5"
	type: POOLING
	pooling_param {
		kernel_size: 7
		stride: 1
		pool: AVE
	}
}

layers {
	name: "pool5_concat"
	bottom: "pool5"
	top: "pool5_concat"
	type: GPU_CONCAT
}

layers {
	name: "label_concat"
	bottom: "label"
	top: "label_concat"
	type: GPU_CONCAT
}

layers {
	bottom: "pool5_concat"
	top: "fc128"
	name: "fc128"
	type: INNER_PRODUCT
	inner_product_param {
		num_output: 128
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
	blobs_lr: 1.0
	blobs_lr: 2.0
}



layers {
   name: "fc128_relu"
   type: RELU
   bottom: "fc128"
   top: "fc128_relu"
}


layers {
	bottom: "fc128_relu"
	top: "fc2"
	name: "fc2"
	type: INNER_PRODUCT
   	inner_product_param{
	   	num_output: 354564
	   	weight_filler {
			type: "gaussian"
			std: 0.001
		}
	   	bias_filler {
		 	type: "constant"
		 	value: 0
	   	}
   	}
}

layers {
   name: "loss"
   type: SOFTMAX_LOSS
   bottom: "fc2"
   bottom: "label_concat"
   top: "loss"
}



layers {
   name: "acc"
   type: ACCURACY
   bottom: "fc2"
   bottom: "label_concat"
   top: "acc"
}



